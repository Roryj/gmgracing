<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2011 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Template for Mage_Page_Block_Html
 */
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html dir="ltr" lang="en-US"
 ng-app = 'GmgStoreApp'
 xmlns:og='http://opengraphprotocol.org/schema/'
 xmlns:fb='http://www.facebook.com/2008/fbml'>
<head>
<?php echo $this->getChildHtml('head') ?>
</head>
<body<?php echo $this->getBodyClass()?' class="'.$this->getBodyClass().'"':'' ?> ng-controller="GmgStoreCtrl">
<?php echo $this->getChildHtml('after_body_start') ?>
<?php echo $this->getChildHtml('global_notices') ?>
<?php echo $this->getChildHtml('header') ?>
  <div id="content">
			<?php echo $this->getChildHtml('breadcrumbs') ?>
			<?php echo $this->getChildHtml('global_messages') ?>
			<?php echo $this->getChildHtml('content') ?>
	</div>
<?php echo $this->getChildHtml('footer') ?>
<?php echo $this->getChildHtml('before_body_end') ?>
<?php echo $this->getAbsoluteFooter() ?>
</body>

<script type="text/javascript">
	var app = angular.module('GmgStoreApp', ['ngCookies']);
	var api_path = "/store/api-v1";
	//var api_path = "/dev/api-v1";
	jQuery.cookie.json = true;
	jQuery.cookie.defaults.expires = 7
	jQuery.cookie.defaults.path = "/";

	app.config(['$httpProvider', function ($httpProvider) {
			$httpProvider.defaults.transformRequest = function(d, headers){
				jQuery('.loading-animation').addClass('loading');
			}
    	
	    var $http,
	        interceptor = ['$q', '$injector', function ($q, $injector) {
	            var error;

	            function success(response) {
	                // get $http via $injector because of circular dependency problem
	                $http = $http || $injector.get('$http');
	                if($http.pendingRequests.length < 1) {
	                    jQuery('.loading-animation').removeClass('loading');
	                }
	                return response;
	            }

	            function error(response) {
	                // get $http via $injector because of circular dependency problem
	                $http = $http || $injector.get('$http');
	                if($http.pendingRequests.length < 1) {
	                    jQuery('.loading-animation').removeClass('loading');
	                }
	                return $q.reject(response);
	            }

	            return function (promise) {
	                jQuery('.loading-animation').addClass('loading');
	                return promise.then(success, error);
	            }
	        }];

	    $httpProvider.responseInterceptors.push(interceptor);
	}]);

	app.controller('GmgStoreCtrl', function ($scope, $http, $rootScope) {
			$rootScope.yearOptions = [];
			$rootScope.makeOptions = [];
			$rootScope.modelOptions = [];
			$rootScope.categories = [];


			$rootScope.filter = {};
			$rootScope.filterYear = {};
			$rootScope.filterMake = {};
			$rootScope.filterModel = {};


			if(jQuery.cookie('filter'))
				$rootScope.filter = jQuery.cookie('filter');

			find_object = function(collection, id){
				return _.find(collection, function(obj){
  				return obj.id == id;
	  		});
			}

	  	load_years = function(){
	  		$rootScope.makeOptions = [];
	  		$rootScope.modelOptions = [];
	  		$rootScope.categories = [];

				$http.get(api_path + '/category_children', {params: {id: 2}} ).success(function(data) {
					$rootScope.yearOptions = data;
		    }).error(function(data) {
		      $rootScope.yearOptions = [];
		    });
	  	}

	  	load_makes = function(){
	  		$rootScope.makeOptions = [];
	  		$rootScope.modelOptions = [];
	  		$rootScope.categories = [];

				$http.get(api_path + '/category_children', {params: {id: $rootScope.filter.year}} ).success(function(data) {
					$rootScope.makeOptions = data;
		    }).error(function(data) {
		      $rootScope.makeOptions = [];
		    });
	  	}

	  	load_models = function(){
	  		$rootScope.modelOptions = [];
	  		$rootScope.categories = [];
				$http.get(api_path + '/category_children', {params: {id: $rootScope.filter.make}} ).success(function(data) {
					$rootScope.modelOptions = data;
		    }).error(function(data) {
		      $rootScope.modelOptions = [];
		    });
	  	}

	  	load_categories = function(){
	  		$rootScope.categories = [];
				$http.get(api_path + '/category_children', {params: {id: $rootScope.filter.model}} ).success(function(data) {
					$rootScope.categories = data;
		    }).error(function(data) {
		      $rootScope.categories = [];
		    });
	  	}

	  	$rootScope.go = function(){
	  		var category = find_object($rootScope.modelOptions, $rootScope.filter.model);

	  		if(!category){
	  			$rootScope.filter.model = null;
	  			category = find_object($rootScope.makeOptions, $rootScope.filter.make);
	  		}

	  		if (category){
	  			jQuery.cookie('filter', $rootScope.filter);
	  			window.location.href = category.url;
	  		}
	  	}

	  	$rootScope.$watch("yearOptions.length", function(v, v1){
	  		$rootScope.filterYear = find_object($rootScope.yearOptions, $rootScope.filter.year);
	  	});
	  	$rootScope.$watch("filter.year", function(v, v1){
	  		if(v){
	  			$rootScope.filterYear = find_object($rootScope.yearOptions, v);
		  		load_makes();
	  		}
			});


	  	$rootScope.$watch("makeOptions.length", function(v, v1){
	  		$rootScope.filterMake = find_object($rootScope.makeOptions, $rootScope.filter.make);
	  	});
	  	
	  	$rootScope.$watch("filter.make", function(v, v1){
				if (v){
					$rootScope.filterMake = find_object($rootScope.makeOptions, v);
					load_models();
				}
			});


	  	$rootScope.$watch("modelOptions.length", function(v, v1){
	  		$rootScope.filterModel = find_object($rootScope.modelOptions, $rootScope.filter.model);
	  	});
			$rootScope.$watch("filter.model", function(v, v1){
				if (v){
					$rootScope.filterModel = find_object($rootScope.modelOptions, v);
					load_categories();
				}
			});

			load_years();
	});
</script>
</html>
